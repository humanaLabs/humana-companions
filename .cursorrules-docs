# Humana Companions - Documentation Rules

## Documenta√ß√£o de Blueprints - OBRIGAT√ìRIO

### NUNCA inclua c√≥digo t√©cnico em documentos de blueprints:

**‚úÖ CORRETO:**
- An√°lise estrat√©gica e gaps
- Prioriza√ß√£o por impacto √ó esfor√ßo
- Roadmap conceitual (sem timelines espec√≠ficos)
- M√©tricas de sucesso (sem ROI financeiro)
- Decis√µes arquiteturais conceituais
- Fluxos e processos de neg√≥cio
- Estruturas organizacionais
- Requisitos e especifica√ß√µes

**‚ùå NUNCA inclua:**
- C√≥digo TypeScript, JavaScript, SQL
- Interfaces de programa√ß√£o
- Implementa√ß√µes t√©cnicas
- Exemplos de c√≥digo
- Snippets de configura√ß√£o
- Schemas de banco detalhados
- APIs endpoints espec√≠ficos
- An√°lise de ROI financeiro
- Timelines espec√≠ficos (datas, semanas)

### Estrutura padr√£o de blueprint:
```
# T√≠tulo do Blueprint

## üéØ Vis√£o Geral
## üîç An√°lise do Estado Atual
## üìä Gap Analysis
## üèóÔ∏è Arquitetura Conceitual
## üöÄ Roadmap de Implementa√ß√£o
## üìà M√©tricas de Sucesso
## üéØ Pr√≥ximos Passos
```

**Foco em:**
- **Estrat√©gia** sobre implementa√ß√£o
- **Por qu√™** antes do **como**
- **Business value** sobre detalhes t√©cnicos
- **Decis√µes** sobre solu√ß√µes
- **Impacto** sobre complexidade

## Estrutura de Documenta√ß√£o

### Organiza√ß√£o em Diret√≥rios:
```
projeto/
‚îú‚îÄ‚îÄ blueprints/          # Estrat√©gia e planejamento
‚îÇ   ‚îú‚îÄ‚îÄ 00.x-*          # Prioriza√ß√£o e an√°lises
‚îÇ   ‚îú‚îÄ‚îÄ 01-*            # Neg√≥cio e produto
‚îÇ   ‚îú‚îÄ‚îÄ 02-*            # Experi√™ncia e interface
‚îÇ   ‚îú‚îÄ‚îÄ 03-*            # Data room e gest√£o
‚îÇ   ‚îú‚îÄ‚îÄ 04-*            # Ferramentas e MCP
‚îÇ   ‚îú‚îÄ‚îÄ 05-*            # Workspace e ambiente
‚îÇ   ‚îú‚îÄ‚îÄ 06-*            # Organiza√ß√µes e hierarquia
‚îÇ   ‚îú‚îÄ‚îÄ 07-*            # Design system
‚îÇ   ‚îú‚îÄ‚îÄ 08-*            # Estrutura tecnol√≥gica
‚îÇ   ‚îú‚îÄ‚îÄ 09-*            # Marketplace e aplicativos
‚îÇ   ‚îú‚îÄ‚îÄ 10-*            # Desenvolvimento
‚îÇ   ‚îú‚îÄ‚îÄ 11-*            # Seguran√ßa e governan√ßa
‚îÇ   ‚îî‚îÄ‚îÄ 12-*            # Analytics e insights
‚îú‚îÄ‚îÄ diagramas/           # Artefatos visuais
‚îú‚îÄ‚îÄ analise_mudancas/    # An√°lises t√©cnicas
‚îú‚îÄ‚îÄ telas/              # Mockups e wireframes
‚îî‚îÄ‚îÄ testes/             # Documenta√ß√£o de testes
```

## Regras de Escrita

### Tom e Linguagem:
- Use linguagem clara e objetiva
- Evite jarg√µes t√©cnicos desnecess√°rios
- Prefira bullet points a par√°grafos longos
- Use emojis para organiza√ß√£o visual (üìä üéØ üîç ‚ö°)
- Mantenha consist√™ncia terminol√≥gica

### Formata√ß√£o Markdown:
- Headers hier√°rquicos (##, ###, ####)
- Listas ordenadas para sequ√™ncias
- Listas n√£o-ordenadas para conjuntos
- Code blocks apenas para exemplos conceituais
- Tabelas para compara√ß√µes
- Links internos entre documentos relacionados

### Estrutura de Se√ß√µes:
```markdown
# T√≠tulo Principal

## üéØ Vis√£o Geral
Resumo executivo em 2-3 par√°grafos

## üîç Contexto Atual
Estado atual do sistema/processo

## üìä An√°lise de Gaps
Lacunas identificadas com prioriza√ß√£o

## üèóÔ∏è Solu√ß√£o Proposta
Abordagem conceitual da solu√ß√£o

## üöÄ Implementa√ß√£o
Fases e marcos sem timelines espec√≠ficos

## üìà M√©tricas
Indicadores de sucesso mensur√°veis

## üéØ Pr√≥ximos Passos
A√ß√µes imediatas e depend√™ncias
```

## Versionamento e Manuten√ß√£o

### Nomenclatura de Arquivos:
- Use numera√ß√£o sequencial (00.1, 00.2, etc.)
- Nomes descritivos e consistentes
- Prefixos por categoria/dom√≠nio
- Sem espa√ßos nos nomes de arquivo

### Atualiza√ß√µes:
- Documente mudan√ßas significativas
- Mantenha hist√≥rico de decis√µes
- Remova informa√ß√µes obsoletas
- Atualize refer√™ncias cruzadas

### Cross-references:
- Link para blueprints relacionados
- Referencie documentos de apoio
- Mantenha consist√™ncia entre documentos
- Valide links periodicamente

## Documenta√ß√£o T√©cnica

### Quando Incluir C√≥digo:
- APENAS em documentos t√©cnicos espec√≠ficos
- Nunca em blueprints estrat√©gicos
- Use para exemplos de API/configura√ß√£o
- Mantenha c√≥digo sempre atualizado

### Diagramas e Visualiza√ß√µes:
- Use Mermaid para fluxos
- Diagramas C4 para arquitetura
- Wireframes para interfaces
- Screenshots para estado atual

### Exemplos Visuais:
```mermaid
graph TD
    A[Usu√°rio] --> B[Interface]
    B --> C[API]
    C --> D[Banco de Dados]
```

## Qualidade e Revis√£o

### Checklist de Qualidade:
- [ ] Objetivo claro definido
- [ ] Audi√™ncia identificada
- [ ] Estrutura l√≥gica seguida
- [ ] Linguagem consistente
- [ ] Links funcionais
- [ ] Formata√ß√£o adequada
- [ ] Revis√£o ortogr√°fica
- [ ] Valida√ß√£o t√©cnica (se aplic√°vel)

### Processo de Revis√£o:
- Auto-revis√£o antes de commit
- Peer review para documentos cr√≠ticos
- Valida√ß√£o com stakeholders
- Atualiza√ß√£o baseada em feedback

### Manuten√ß√£o Cont√≠nua:
- Revis√£o trimestral de blueprints
- Atualiza√ß√£o ap√≥s implementa√ß√µes
- Arquivamento de documentos obsoletos
- Consolida√ß√£o de informa√ß√µes duplicadas 